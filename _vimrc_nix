" ==================================================================
" File:         $VIM/_vimrc_nix
" Purpose:      Setup file for the editor Vim (Vi IMproved) under *NIX  systems
" Author:       Luc Hermitte <hermitte at free.fr>
"		<URL:http://code.google.com/p/lh-vim/>
" Last update:  17th May 2010 ($Date)
" ===================================================================
"
" ===================================================================
" SETtings {{{
" ===================================================================
if has("unix")
  let shell='tcsh'
endif
if has('gui_gtk')
  set gfn=Luxi\ Mono\ 9
else
  set gfn=-*-Fixed-medium-r-semiCondensed-*-13-120-*-*-C-*-iso8859-1
endif
" }}}
" ===================================================================
" Keyboard customization {{{
" ===================================================================
" Keyboard mapping for cursor keys {{{
" [works for SUNs in Solarium (room 030) - 970815]
"
if !has('gui_running')
  map <ESC>OA <Up>
  map <ESC>OB <Down>
  map <ESC>OC <Right>
  map <ESC>OD <Left>
  imap <ESC>OA <Up>
  imap <ESC>OB <Down>
  imap <ESC>OC <Right>
  imap <ESC>OD <Left>
  "
  " Keyboard mapping for cursor keys
  " [works for XTerminals - 970818]
  map <ESC>[A <Up>
  map <ESC>[B <Down>
  map <ESC>[C <Right>
  map <ESC>[D <Left>
  imap <ESC>[A <Up>
  imap <ESC>[B <Down>
  imap <ESC>[C <Right>
  imap <ESC>[D <Left>
endif
" }}}
" -------------------------------------------------------------------
" vt100/teraterm {{{
if &term =~ 'vt100\|teraterm' " with putty
  " permettre le pave numerique.... sur la vt100 {{{
  noremap  Op 0
  noremap! Op 0
  noremap  Oq 1
  noremap! Oq 1
  noremap  Or 2
  noremap! Or 2
  noremap  Os 3
  noremap! Os 3
  noremap  Ot 4
  noremap! Ot 4
  noremap  Ou 5
  noremap! Ou 5
  noremap  Ov 6
  noremap! Ov 6
  noremap  Ow 7
  noremap! Ow 7
  noremap  Ox 8
  noremap! Ox 8
  noremap  Oy 9
  noremap! Oy 9
  noremap  OM 
  noremap! OM 
  "
  " remappe <del>
  map [3~ <del>
  map! [3~ <del>
  map   <del>
  map!  <del>
  map   X
  "
  " touche insert pour basculer de mode
  map  [2~ <insert>
  map! [2~ <insert>
  "
  "HINT:! ^F   - Page Down
  map  [6~ <PageDown>
  map! [6~ <PageDown>
  "
  "HINT:! ^B   - Page Up
  map  [5~ <PageUp>
  map! [5~ <PageUp>
  "
  " <home>
  map  [1~ <home>
  map! [1~ <home>

  "map  O~ <home>
  "map! O~ <home>
  "
  " <end>
  map  [4~ <end>
  map! [4~ <end>
  "map  O~ <end>
  "map! O~ <end>
  "
  "HINT:  ^$   - fin de ligne (mode ins+norm)
  map   <end>
  map!  <end>
  " }}}
  " -------------------------------------------------------------------
  " Touches de fonctions programmees {{{
  " -------------------------------------------------------------------
  "HINT:  F1   - status du fichier
  " pour vt100 : PF1 = OP
  map  OP <F1>
  map! OP <F1>
  map  [23~ <S-F1>
  map! [23~ <S-F1>
  " pour gvim
  map! [11~ <F1>
  map! [11~ <F1>
  "
  "HINT:  F2   - sauvegarde du fichier
  " pour vt100 : PF2 = OQ
  map  OQ <F2>
  map! OQ <F2>
  map  [24~ <S-F2>
  map! [24~ <S-F2>
  " pour gvim
  map  [12~ <F2>
  map! [12~ <F2>
  "
  " fonctions libres de F3 a F4
  map  OR   <F3>
  map! OR   <F3>
  map  [25~ <S-F3>
  map! [25~ <S-F3>

  map  OS   <F4>
  map! OS   <F4>
  map  [26~ <S-F4>
  map! [26~ <S-F4>
  "INCLUDE: fns
  "
  "HINT:  F5
  map  [15~ <F5>
  map! [15~ <F5>
  map  [28~ <S-F5>
  map! [28~ <S-F5>
  "map  [12~ <F5>
  "map! [12~ <F5>
  "
  "HINT:  F6
  map  [17~ <F6>
  map! [17~ <F6>
  map  [29~ <S-F6>
  map! [29~ <S-F6>
  "
  "HINT:  F7
  map  [18~ <F7>
  map! [18~ <F7>
  map  [31~ <S-F7>
  map! [31~ <S-F7>
  "
  "HINT:  F8
  map  [19~ <F8>
  map! [19~ <F8>
  map  [32~ <S-F8>
  map! [32~ <S-F8>
  "
  "HINT:  F9
  map  [20~ <F9>
  map! [20~ <F9>
  map  [33~ <S-F9>
  map! [33~ <S-F9>
  "   
  "HINT:  F10
  map  [10~ <F10>
  map! [10~ <F10>
  map  [34~ <S-F10>
  map! [34~ <S-F10>
  "   
  "HINT:  F11
  "map  [23~ <F11>
  "map! [23~ <F11>
  "map  [23~ <S-F11>
  "map! [23~ <S-F11>
  "   
  "HINT:  F12
  "map  [24~ <F12>
  "map! [24~ <F12>
  "map  [24~ <S-F12>
  "map! [24~ <S-F12>
  " }}}
  " -------------------------------------------------------------------
endif " }}}
" -------------------------------------------------------------------
" terminal setup {{{
" from Johannes Zellner .vimrc
if "screen" == &term || "rxvt" == &term || "linux" == &term
  set t_kb=
  set t_kD=[3~
  "    " fixdel
  " I used the following lines to map the upper 8 colors
  " (color 9 - 16) to 1 - 8.
  "set t_Co=16
  "set t_AF=[3%?%p1%{8}%>%t%p1%{8}%-%e%p1%;%dm
  "set t_AB=[4%?%p1%{8}%>%t%p1%{8}%-%e%p1%;%dm
else
  let rgb_file = "/usr/X11R6/lib/X11/rgb.txt"
  if &t_Co <= 8 && ! exists('$BW') && &term != "xterm-color"
    set t_Co=16
  endif
  if has("terminfo")
    set t_AB=[%?%p1%{8}%<%t%p1%{40}%+%e%p1%{92}%+%;%dm
    set t_AF=[%?%p1%{8}%<%t%p1%{30}%+%e%p1%{82}%+%;%dm
  else
    set t_Sf=[3%dm
    set t_Sb=[4%dm
  endif
endif
" }}}
" -------------------------------------------------------------------
"  Some Remappings for inaccessible keys (meta chars) {{{
if 
      \ (version >= 600) &&
      \ (!has('gui_running') || ($HOST != $REMOTEHOST))
  " \ (!has('gui_running') || ($HOST != $REMOTEHOST) || ($TERM !~ '^xterm\|^rxvt'))
  " Forced here, to support when exceed does not let us give <ALT-> to the
  " remote X server.

  " -- Common brackets
  map <C-J>		<Plug>MarkersJumpF
  imap <C-J>		<Plug>MarkersJumpF

  map <C-L><Ins>	<Plug>MarkersMark
  imap <C-L><Ins>	<Plug>MarkersMark
  map <C-L><Del>	<Plug>MarkersJumpF
  imap <C-L><Del>	<Plug>MarkersJumpF
  map <C-L><S-Del>	<Plug>MarkersJumpB
  imap <C-L><S-Del>	<Plug>MarkersJumpB

  if !exists('g:cb_want_mode') || g:cb_want_mode
    noremap <silent> <C-L>b	:call BracketsManipMode("\<C-L>b")<cr>
  else
    map <C-L>bx	<Plug>DeleteBrackets
    map <C-L>b(	<Plug>ChangeToRoundBrackets
    map <C-L>b[	<Plug>ChangeToSquareBrackets
    map <C-L>b{	<Plug>ChangeToCurlyBrackets
    map <C-L>b\	<Plug>ToggleBackslash
  endif

  " -- Enhance Commentify
  let mapleader = '£'
  let g:EnhCommentifyUseAltKeys = 'no'

  " -- BTW
  let g:BTW_key_config = '<C-F7>'

  " -- 
endif

if has('mac')
  map <D-cr>		<Plug>MarkersJumpF
  imap <D-cr>		<Plug>MarkersJumpF
  map <D-S-cr>		<Plug>MarkersJumpB
  imap <D-S-cr>		<Plug>MarkersJumpB

  if !exists('g:cb_want_mode') || g:cb_want_mode
    noremap <silent> ÃŸ	:call BracketsManipMode("ÃŸ")<cr>
    noremap <silent> ß	:call BracketsManipMode("ß")<cr>
  else
    map <C-L>bx	<Plug>DeleteBrackets
    map <C-L>b(	<Plug>ChangeToRoundBrackets
    map <C-L>b[	<Plug>ChangeToSquareBrackets
    map <C-L>b{	<Plug>ChangeToCurlyBrackets
    map <C-L>b\	<Plug>ToggleBackslash
  endif

  " -- Enhance Commentify
  map ¿ <M-x>
  map © <M-c>
  map â‰ˆ <M-x>
  map Â© <M-c>

endif
"  Some Remappings for inaccessible keys (meta chars) }}}
" -------------------------------------------------------------------
" }}}
"
" -- No LH Vim Spell if no aspell
let g:loaded_lhVimSpell_vim = executable('ispell') || executable('aspell')

" -- Solaris man
if $MACHTYPE == "sparc-sun-solaris"
  let g:manpageview_bookflag = "-s"
endif

" -- Open link in browser
let s:browser = executable('firefox') ? 'firefox' : ''
function! s:Browser()
  return lh#option#get('browser', s:browser, '[bg]') . ' '
endfunction

function! s:RunBrowser(url)
  let url = escape(a:url, '%')
  silent exe ':!'.<sid>Browser().url.'&'
endfunction

nnoremap <silent> <C-L>e 
      \ :call <sid>RunBrowser(
      \    matchstr(escape(expand('<cWORD>'), '#'), 
      \    '\%(.\{-}\zs\%(news:\\|mailto:\\|ftp://\\|https\=://\)\)\=[^:;,<>]\+'
      \ ))<CR>

" Problem with urls ending in .html
" nnoremap <silent> <C-L>m 
" \ :exe ':!start rundll32 url.dll,FileProtocolHandler '.
" \    matchstr(expand('<cWORD>'), 
" \    '\%(.\{-}\zs\%(news:\\|mailto:\\|ftp://\\|https\=://\)\)\=[^:;,<>]\+'
" \ )<CR>

vnoremap <silent> <C-L>e 
      \ :call <sid>RunBrowser(lh#visual#selection())<cr>


" ===================================================================
" vim600: set fdm=marker:
